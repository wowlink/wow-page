{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","query","URLSearchParams","useLocation","search","wowlink","get","devMode","githubUserOr","githubUser","githubRepoOr","githubRepo","useState","msg","progress","setProgress","useEffect","a","fetcher_config","githubRepository","fetcher","WowLookupFetcherFactory","BuiltInLookupFetcherType","GitHub","fetch_req","fetch","fetch_res","converter_config","fetcherResponse","converter","WowUrlConverterFactory","BuiltInWowUrlConverterType","Basic","converter_req","wowUrl","converter_res","convert","fullUrl","window","location","href","convertAndRedirect","className","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,sDC0BnCA,EAAO,WACX,IAAMC,EAJC,IAAIC,gBAAgBC,cAAcC,QAOnCC,EAAUJ,EAAMK,IAAI,OACpBC,EAA+B,SAArBN,EAAMK,IAAI,OACpBE,EAAeP,EAAMK,IAAI,WACzBG,EAAqBD,GAA8B,UACnDE,EAAeT,EAAMK,IAAI,WACzBK,EAAqBD,GAA8B,kBACzD,EAAgCE,mBAAS,CAAEC,IAAK,eAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KAkCA,OAhCAC,qBAAU,WAyBHX,EAxBmB,uCAAG,0CAAAY,EAAA,6DACzBF,EAAY,CAAEF,IAAK,iEACbK,EAAyC,CAC7CT,WAAYA,EACZU,iBAAkBR,GAEdS,EAA4BC,kCAChCC,2BAAyBC,OAAQL,GAC7BM,EAAmC,GARhB,SASuBJ,EAAQK,MAAMD,GATrC,OASnBE,EATmB,OAUnBC,EAA0C,CAC9CC,gBAAiBF,GAEbG,EAA6BC,iCACjCC,6BAA2BC,MAAOL,GAC9BM,EAAsC,CAC1CC,OAAQ7B,GAAoB,IAExB8B,EAAuCN,EAAUO,QAAQH,GAC/DlB,EAAY,CAAEF,IAAI,eAAD,OAAiBsB,EAAcE,QAA/B,2CACZ9B,IACH+B,OAAOC,SAASC,KAAOL,EAAcE,SArBd,4CAAH,oDA4BxBI,GAHE1B,EAAY,CAAEF,IAAK,0EAIpB,CAACR,EAASE,EAASE,EAAYE,IAGhC,qBAAK+B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oGAIExC,GACA,0CACYA,KAIZE,GACA,6FAIF,2CACaO,EAASD,aAefiC,EARH,WACV,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCtFSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2b4f66c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useLocation, BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  WowLookupFetcher,\n  BuiltInLookupFetcherType,\n  WowLookupFetchRequest,\n  WowLookupFetcherConfig,\n  WowLookupFetchResponse,\n  BuiltInWowUrlConverterType,\n  WowUrlConverter,\n  WowUrlConverterConfig,\n  WowUrlConvertRequest,\n  WowUrlConvertResponse,\n} from \"@wowlink/wow-interface\";\nimport { WowLookupFetcherFactory } from \"@wowlink/wow-lookup-fetcher\";\nimport { WowUrlConverterFactory } from \"@wowlink/wow-url-converter\";\n\n// http://localhost:3000?wow=gh\n// window.location.href = \"https://github.com\";\n\nconst useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Home = (): JSX.Element => {\n  const query = useQuery();\n  // TODO(tianhaoz95): make populating the config a function and then\n  // into a package where default values are defined in one place.\n  const wowlink = query.get(\"wow\");\n  const devMode = query.get(\"dev\") === \"true\";\n  const githubUserOr = query.get(\"gh_user\");\n  const githubUser: string = githubUserOr ? githubUserOr : \"wowlink\";\n  const githubRepoOr = query.get(\"gh_repo\");\n  const githubRepo: string = githubRepoOr ? githubRepoOr : \"default-profile\";\n  const [progress, setProgress] = useState({ msg: \"initiation\" });\n\n  useEffect(() => {\n    const convertAndRedirect = async () => {\n      setProgress({ msg: \"fetching WowLink lookup ðŸ’¤ðŸ’¤ðŸ’¤\" });\n      const fetcher_config: WowLookupFetcherConfig = {\n        githubUser: githubUser,\n        githubRepository: githubRepo\n      };\n      const fetcher: WowLookupFetcher = WowLookupFetcherFactory(\n        BuiltInLookupFetcherType.GitHub, fetcher_config);\n      const fetch_req: WowLookupFetchRequest = {};\n      const fetch_res: WowLookupFetchResponse = await fetcher.fetch(fetch_req);\n      const converter_config: WowUrlConverterConfig = {\n        fetcherResponse: fetch_res\n      };\n      const converter: WowUrlConverter = WowUrlConverterFactory(\n        BuiltInWowUrlConverterType.Basic, converter_config);\n      const converter_req: WowUrlConvertRequest = {\n        wowUrl: wowlink ? wowlink : \"\",\n      };\n      const converter_res: WowUrlConvertResponse = converter.convert(converter_req);\n      setProgress({ msg: `redirect to ${converter_res.fullUrl} ðŸš€ðŸš€ðŸš€` });\n      if (!devMode) {\n        window.location.href = converter_res.fullUrl;\n      }\n    };\n    if (!wowlink) {\n      setProgress({ msg: \"wowlink not found or not valid ðŸ”¥ðŸ”¥ðŸ”¥\" });\n      return;\n    }\n    convertAndRedirect();\n  }, [wowlink, devMode, githubUser, githubRepo]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          I am too lazy to change the default home page Â¯\\_(ãƒ„)_/Â¯\n        </p>\n        {\n          wowlink &&\n          <p>\n            WowLink: {wowlink}\n          </p>\n        }\n        {\n          devMode &&\n          <p>\n            In development mode, will not redirect Â¯\\_(ãƒ„)_/Â¯\n          </p>\n        }\n        <p>\n          Progress: {progress.msg}\n        </p>\n      </header>\n    </div>\n  );\n};\n\nconst App = (): JSX.Element => {\n  return (\n    <Router>\n      <Home />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}