{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Home","query","URLSearchParams","useLocation","search","wowlink","get","devMode","githubUserOr","githubUser","githubRepoOr","githubRepo","_useState","useState","msg","_useState2","Object","slicedToArray","progress","setProgress","_useState3","_useState4","suggestions","setSuggestions","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","fetcher_config","fetcher","fetch_req","fetch_res","converter_config","converter","converter_req","converter_res","suggestion_list","wrap","_context","prev","next","githubRepository","WowLookupFetcherFactory","BuiltInLookupFetcherType","GitHub","fetch","sent","fetcherResponse","WowUrlConverterFactory","BuiltInWowUrlConverterType","Basic","wowUrl","convert","concat","fullUrl","window","location","href","searchRanking","stop","apply","this","arguments","convertAndRedirect","react_default","createElement","className","src","logo","alt","role","aria-label","map","suggestion","score","App","react_router_dom","App_Home","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b61d0e68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useLocation, BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  WowLookupFetcher,\n  BuiltInLookupFetcherType,\n  WowLookupFetchRequest,\n  WowLookupFetcherConfig,\n  WowLookupFetchResponse,\n  BuiltInWowUrlConverterType,\n  WowUrlConverter,\n  WowUrlConverterConfig,\n  WowUrlConvertRequest,\n  WowUrlConvertResponse,\n  WowUrlRankingItem,\n} from \"@wowlink/wow-interface\";\nimport { WowLookupFetcherFactory } from \"@wowlink/wow-lookup-fetcher\";\nimport { WowUrlConverterFactory } from \"@wowlink/wow-url-converter\";\n\n// http://localhost:3000?wow=gh\n// window.location.href = \"https://github.com\";\n\nconst useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Home = (): JSX.Element => {\n  const query = useQuery();\n  // TODO(tianhaoz95): make populating the config a function and then\n  // into a package where default values are defined in one place.\n  const wowlink = query.get(\"wow\");\n  const devMode = query.get(\"dev\") === \"true\";\n  const githubUserOr = query.get(\"gh_user\");\n  const githubUser: string = githubUserOr ? githubUserOr : \"wowlink\";\n  const githubRepoOr = query.get(\"gh_repo\");\n  const githubRepo: string = githubRepoOr ? githubRepoOr : \"default-profile\";\n  const [progress, setProgress] = useState({ msg: \"initiation\" });\n  const [suggestions, setSuggestions] = useState<WowUrlRankingItem[]>([]);\n\n  useEffect(() => {\n    const convertAndRedirect = async () => {\n      setProgress({ msg: \"fetching WowLink lookup ðŸ’¤ðŸ’¤ðŸ’¤\" });\n      const fetcher_config: WowLookupFetcherConfig = {\n        githubUser: githubUser,\n        githubRepository: githubRepo\n      };\n      const fetcher: WowLookupFetcher = WowLookupFetcherFactory(\n        BuiltInLookupFetcherType.GitHub, fetcher_config);\n      const fetch_req: WowLookupFetchRequest = {};\n      const fetch_res: WowLookupFetchResponse = await fetcher.fetch(fetch_req);\n      const converter_config: WowUrlConverterConfig = {\n        fetcherResponse: fetch_res\n      };\n      const converter: WowUrlConverter = WowUrlConverterFactory(\n        BuiltInWowUrlConverterType.Basic, converter_config);\n      const converter_req: WowUrlConvertRequest = {\n        wowUrl: wowlink ? wowlink : \"\",\n      };\n      const converter_res: WowUrlConvertResponse = converter.convert(converter_req);\n      setProgress({ msg: `redirect to ${converter_res.fullUrl} ðŸš€ðŸš€ðŸš€` });\n      // TODO(@tianhaoz95): change this to use the exact match indicator once that\n      // becomes available in the interface and url converter.\n      if (converter_res.fullUrl !== \"/\" && !devMode) {\n        window.location.href = converter_res.fullUrl;\n      }\n      setProgress({ msg: `Exact match not found for \"${converter_req.wowUrl}\", here are some suggestions:` });\n      if (converter_res.searchRanking) {\n        const suggestion_list: WowUrlRankingItem[] = converter_res.searchRanking;\n        setSuggestions(suggestion_list);\n      }\n    };\n    if (!wowlink) {\n      setProgress({ msg: \"wowlink not found or not valid ðŸ”¥ðŸ”¥ðŸ”¥\" });\n      return;\n    }\n    convertAndRedirect();\n  }, [wowlink, devMode, githubUser, githubRepo]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          I am too lazy to change the default home page Â¯\\_(ãƒ„)_/Â¯\n        </p>\n        {\n          devMode &&\n          <p>\n            In development mode, will not redirect <span role=\"img\" aria-label=\"sunglasses face\">ðŸ˜ŽðŸ˜ŽðŸ˜Ž</span>\n          </p>\n        }\n        <p>\n          {progress.msg}\n        </p>\n        <div>\n          {suggestions.map((suggestion) => (\n            <div>\n              {suggestion.wowUrl}: <a href={suggestion.fullUrl}> {suggestion.fullUrl} </a> ({suggestion.score})\n            </div>\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nconst App = (): JSX.Element => {\n  return (\n    <Router>\n      <Home />\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}